// Generated by CoffeeScript 1.6.2
(function() {
  var CopyCopter;

  CopyCopter = (function() {
    function CopyCopter(options) {
      var key, value;

      for (key in options) {
        value = options[key];
        this[key] = value;
      }
      if (this.apiKey == null) {
        throw 'please provide the apiKey';
      }
      if (this.host == null) {
        throw 'please provide the host';
      }
      this.isLoaded = false;
      this.isLoading = false;
      this.translations = {};
    }

    CopyCopter.prototype.translate = function(key, options) {
      var defaultValue, message, msg, regex, scope, value, _i, _len;

      if (!this.isLoaded) {
        this.load();
      }
      defaultValue = options.defaultValue;
      delete options.defaultValue;
      scope = key.split('.');
      scope.unshift('en');
      message = this.translations;
      for (_i = 0, _len = scope.length; _i < _len; _i++) {
        key = scope[_i];
        message = message[key] || {};
      }
      msg = message.length ? message : defaultValue;
      for (key in options) {
        value = options[key];
        regex = new RegExp("(.*)%{" + key + "}(.*)");
        if (regex.test(msg)) {
          msg = msg.replace(regex, "$1" + value + "$2");
        }
        regex = new RegExp("(.*){{" + key + "}}(.*)");
        if (regex.test(msg)) {
          msg = msg.replace(regex, "$1" + value + "$2");
        }
      }
      return msg;
    };

    CopyCopter.prototype.url = function() {
      return "//" + this.host + "/api/v2/projects/" + this.apiKey + "/published_blurbs?format=hierarchy";
    };

    CopyCopter.prototype.load = function() {
      var request,
        _this = this;

      request = jQuery.ajax({
        url: this.url(),
        cache: true,
        dataType: 'jsonp'
      });
      request.always(function() {
        return _this.isLoaded = true;
      });
      return request.success(function(data) {
        return _this.translations = data;
      });
    };

    return CopyCopter;

  })();

  this.CopyCopter = CopyCopter;

  if (typeof module !== "undefined" && module !== null) {
    module.exports = CopyCopter;
  }

}).call(this);
